AWSTemplateFormatVersion: '2010-09-09'
Description: 'Lunora Player - Multi-Source Streaming Infrastructure with MediaLive and MediaPackage'

Parameters:
  ProjectName:
    Type: String
    Default: 'lunora-player'
    Description: 'Project name for resource naming'
  
  Environment:
    Type: String
    Default: 'prod'
    AllowedValues: ['dev', 'staging', 'prod']
    Description: 'Environment name'
  
  InputType:
    Type: String
    Default: 'RTMP_PUSH'
    AllowedValues: ['RTMP_PUSH', 'SRT_LISTENER', 'RTP_PUSH', 'MP4_FILE']
    Description: 'MediaLive input type'
  
  InputResolution:
    Type: String
    Default: '1920x1080'
    AllowedValues: ['1920x1080', '1280x720', '854x480']
    Description: 'Input video resolution'
  
  EnableRedundancy:
    Type: String
    Default: 'false'
    AllowedValues: ['true', 'false']
    Description: 'Enable dual input redundancy (main + backup)'

Resources:
  # Security Group for MediaLive inputs
  MediaLiveSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: !Sub '${ProjectName}-${Environment} MediaLive Input Security Group'
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 1935
          ToPort: 1935
          CidrIp: 0.0.0.0/0
          Description: 'RTMP input'
        - IpProtocol: udp
          FromPort: 9998
          ToPort: 9998
          CidrIp: 0.0.0.0/0
          Description: 'SRT input'
        - IpProtocol: udp
          FromPort: 5000
          ToPort: 5010
          CidrIp: 0.0.0.0/0
          Description: 'RTP input range'
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-${Environment}-medialive-sg'
        - Key: Project
          Value: !Ref ProjectName
        - Key: Environment
          Value: !Ref Environment

  # VPC for MediaLive (required for security groups)
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-${Environment}-vpc'

  # Subnets for MediaLive (requires 2 AZs)
  Subnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.1.0/24
      AvailabilityZone: !Select [0, !GetAZs '']
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-${Environment}-subnet-1'

  Subnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.2.0/24
      AvailabilityZone: !Select [1, !GetAZs '']
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-${Environment}-subnet-2'

  # Internet Gateway for VPC
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-${Environment}-igw'

  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  # Route Table
  RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-${Environment}-rt'

  Route:
    Type: AWS::EC2::Route
    DependsOn: AttachGateway
    Properties:
      RouteTableId: !Ref RouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  SubnetRouteTableAssociation1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref Subnet1
      RouteTableId: !Ref RouteTable

  SubnetRouteTableAssociation2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref Subnet2
      RouteTableId: !Ref RouteTable

  # IAM Role for MediaLive
  MediaLiveRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub '${ProjectName}-${Environment}-medialive-role'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: medialive.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess
        - arn:aws:iam::aws:policy/CloudWatchLogsFullAccess
      Policies:
        - PolicyName: MediaPackageAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - mediapackage:*
                Resource: '*'

  # MediaPackage Channel
  MediaPackageChannel:
    Type: AWS::MediaPackage::Channel
    Properties:
      Id: !Sub '${ProjectName}-${Environment}-channel'
      Description: !Sub '${ProjectName} ${Environment} HLS Channel'
      Tags:
        - Key: Project
          Value: !Ref ProjectName
        - Key: Environment
          Value: !Ref Environment

  # MediaPackage HLS Origin Endpoint
  MediaPackageHLSEndpoint:
    Type: AWS::MediaPackage::OriginEndpoint
    Properties:
      Id: !Sub '${ProjectName}-${Environment}-hls'
      ChannelId: !Ref MediaPackageChannel
      Description: 'HLS endpoint for Lunora Player'
      HlsPackage:
        SegmentDurationSeconds: 6
        PlaylistWindowSeconds: 60
        StreamSelection:
          MaxVideoBitsPerSecond: 8000000
          MinVideoBitsPerSecond: 100000
        AdMarkers: NONE
      Tags:
        - Key: Project
          Value: !Ref ProjectName
        - Key: Environment
          Value: !Ref Environment

Outputs:
  MediaPackageChannelId:
    Description: 'MediaPackage Channel ID'
    Value: !Ref MediaPackageChannel
    Export:
      Name: !Sub '${ProjectName}-${Environment}-channel-id'

  MediaPackageHLSEndpoint:
    Description: 'MediaPackage HLS Endpoint URL'
    Value: !GetAtt MediaPackageHLSEndpoint.Url
    Export:
      Name: !Sub '${ProjectName}-${Environment}-hls-url'

  MediaLiveRoleArn:
    Description: 'MediaLive IAM Role ARN'
    Value: !GetAtt MediaLiveRole.Arn
    Export:
      Name: !Sub '${ProjectName}-${Environment}-medialive-role-arn'

  SecurityGroupId:
    Description: 'Security Group ID for MediaLive inputs'
    Value: !Ref MediaLiveSecurityGroup
    Export:
      Name: !Sub '${ProjectName}-${Environment}-sg-id'

  SubnetIds:
    Description: 'Subnet IDs for MediaLive'
    Value: !Sub '${Subnet1},${Subnet2}'
    Export:
      Name: !Sub '${ProjectName}-${Environment}-subnet-ids'

  VPCId:
    Description: 'VPC ID'
    Value: !Ref VPC
    Export:
      Name: !Sub '${ProjectName}-${Environment}-vpc-id'
