AWSTemplateFormatVersion: '2010-09-09'
Description: 'Lunora Player - Simplified AWS Media Services Infrastructure'

Parameters:
  ProjectName:
    Type: String
    Default: 'lunora-player'
    Description: 'Name of the project for resource naming'
  
  Environment:
    Type: String
    Default: 'dev'
    AllowedValues: ['dev', 'staging', 'prod']
    Description: 'Environment name'
  
  VideoBucketName:
    Type: String
    Default: 'lunora-media-videos'
    Description: 'S3 bucket name for video storage'

Resources:
  # S3 Bucket for Video Storage
  VideoBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub '${VideoBucketName}-${Environment}-${AWS::AccountId}'
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      CorsConfiguration:
        CorsRules:
          - AllowedHeaders: ['*']
            AllowedMethods: [GET, HEAD]
            AllowedOrigins: ['*']
            MaxAge: 3600
      VersioningConfiguration:
        Status: Enabled

  # CloudFront Origin Access Control
  OriginAccessControl:
    Type: AWS::CloudFront::OriginAccessControl
    Properties:
      OriginAccessControlConfig:
        Name: !Sub '${ProjectName}-${Environment}-oac'
        OriginAccessControlOriginType: s3
        SigningBehavior: always
        SigningProtocol: sigv4

  # CloudFront Distribution
  CloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Comment: !Sub '${ProjectName} ${Environment} - Video Distribution'
        DefaultCacheBehavior:
          TargetOriginId: S3Origin
          ViewerProtocolPolicy: redirect-to-https
          CachePolicyId: 4135ea2d-6df8-44a3-9df3-4b5a84be39ad  # CachingDisabled
          OriginRequestPolicyId: 88a5eaf4-2fd4-4709-b370-b4c650ea3fcf  # CORS-S3Origin
        Origins:
          - Id: S3Origin
            DomainName: !GetAtt VideoBucket.RegionalDomainName
            S3OriginConfig:
              OriginAccessIdentity: ''
            OriginAccessControlId: !GetAtt OriginAccessControl.Id
        Enabled: true
        HttpVersion: http2
        PriceClass: PriceClass_100

  # S3 Bucket Policy for CloudFront
  VideoBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref VideoBucket
      PolicyDocument:
        Statement:
          - Sid: AllowCloudFrontServicePrincipal
            Effect: Allow
            Principal:
              Service: cloudfront.amazonaws.com
            Action: s3:GetObject
            Resource: !Sub '${VideoBucket}/*'
            Condition:
              StringEquals:
                'AWS:SourceArn': !Sub 'arn:aws:cloudfront::${AWS::AccountId}:distribution/${CloudFrontDistribution}'

  # MediaPackage Channel
  MediaPackageChannel:
    Type: AWS::MediaPackage::Channel
    Properties:
      Id: !Sub '${ProjectName}-${Environment}-channel'
      Description: !Sub '${ProjectName} ${Environment} HLS Channel'

  # MediaPackage HLS Origin Endpoint
  MediaPackageHLSEndpoint:
    Type: AWS::MediaPackage::OriginEndpoint
    Properties:
      Id: !Sub '${ProjectName}-${Environment}-hls'
      ChannelId: !Ref MediaPackageChannel
      Description: 'HLS Origin Endpoint'
      HlsPackage:
        SegmentDurationSeconds: 6
        PlaylistWindowSeconds: 60
        PlaylistType: EVENT
        AdMarkers: NONE
        IncludeIframeOnlyStream: false
        ProgramDateTimeIntervalSeconds: 0
        UseAudioRenditionGroup: true

  # IAM Role for MediaLive
  MediaLiveRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub '${ProjectName}-${Environment}-medialive-role'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: medialive.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonS3FullAccess
        - arn:aws:iam::aws:policy/CloudWatchLogsFullAccess
      Policies:
        - PolicyName: MediaPackageAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - mediapackage:*
                Resource: '*'

Outputs:
  VideoBucketName:
    Description: 'S3 bucket name for video storage'
    Value: !Ref VideoBucket
    Export:
      Name: !Sub '${AWS::StackName}-VideoBucket'

  CloudFrontDomainName:
    Description: 'CloudFront distribution domain name'
    Value: !GetAtt CloudFrontDistribution.DomainName
    Export:
      Name: !Sub '${AWS::StackName}-CloudFrontDomain'

  MediaPackageHLSEndpointUrl:
    Description: 'MediaPackage HLS endpoint URL'
    Value: !GetAtt MediaPackageHLSEndpoint.Url
    Export:
      Name: !Sub '${AWS::StackName}-HLSEndpoint'

  MediaPackageChannelId:
    Description: 'MediaPackage channel ID'
    Value: !Ref MediaPackageChannel
    Export:
      Name: !Sub '${AWS::StackName}-MediaPackageChannel'
